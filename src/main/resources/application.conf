apnserver {
  address = "tcp://0.0.0.0:5566"
  akka.loglevel = DEBUG
}
staticContentServer {
  akka.loglevel = DEBUG
  server-name = "staticContentServer"
  hostname = "0.0.0.0"
  port = 5567
  rootPath = "/upload/certs"
  tmpPath = "/tmp"
}
apnclient {
  address = "tcp://127.0.0.1:5566"
  akka.loglevel = DEBUG
}
redis {
  host = "127.0.0.1"
  port = 6379
}
zmq-balancing {
  executor = "fork-join-executor"
  type = BalancingDispatcher
  # Configuration for the fork join pool
    fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 2
      # Parallelism (threads) ... ceil(available processors * factor)
      parallelism-factor = 2.0
      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 10
    }
    # Throughput defines the maximum number of messages to be
    # processed per actor before the thread jumps to the next actor.
    # Set to 1 for as fair as possible.
    throughput = 1
}
my-pinned-dispatcher {
  type=PinnedDispatcher
  executor=thread-pool-executor
}
akka {
  # Akka version, checked against the runtime version of Akka.
  version = "2.0.2"
 
  # Home directory of Akka, modules in the deploy directory will be loaded
  home = ""
 
  # Event handlers to register at boot time (Logging$DefaultLogger logs to STDOUT)
  #event-handlers = ["akka.event.Logging$DefaultLogger"]
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  
  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  log-config-on-start = off
  
  # Log level used by the configured loggers (see "event-handlers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"
 
  # Log level for the very basic logger activated during AkkaApplication startup
  # Options: ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "WARNING"
  
  # List FQCN of extensions which shall be loaded at actor system startup.
  # Should be on the format: 'extensions = ["foo", "bar"]' etc.
  # See the Akka Documentation for more info about Extensions
  extensions = []
  
  # Toggles whether the threads created by this ActorSystem should be daemons or not
  daemonic = off
  
  # JVM shutdown, System.exit(-1), in case of a fatal error, such as OutOfMemoryError
  jvm-exit-on-fatal-error = on
  
  actor {
    default-dispatcher {
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      throughput = 50
    }
    deployment {
	  /my-router {
	    router = round-robin
	    nr-of-instances = 5
	  }
	}
  }
  debug {
  	autoreceive = on
  }
  remote {
  	log-send-messages = on
  	log-received-messages = on
  }
  zeromq {
    # The default timeout for a poll on the actual zeromq socket.
    poll-timeout = 100ms
 
    # Timeout for creating a new socket
    new-socket-timeout = 8s
 
    socket-dispatcher {
      # A zeromq socket needs to be pinned to the thread that created it.
      # Changing this value results in weird errors and race conditions within zeromq
      executor = thread-pool-executor
      type = "PinnedDispatcher"
    }
  }
}